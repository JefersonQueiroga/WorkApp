from django.core.management.base import BaseCommand
from django.contrib.auth.models import Group


class Command(BaseCommand):
    help = 'Cria os grupos (pap√©is) de usu√°rios do sistema: GERENTE e USUARIO_SIMPLES'

    def handle(self, *args, **kwargs):
        self.stdout.write(self.style.WARNING('=' * 70))
        self.stdout.write(self.style.WARNING('Iniciando carga de grupos de usu√°rios...'))
        self.stdout.write(self.style.WARNING('=' * 70))
        
        # Lista de grupos para criar
        grupos = ['GERENTE', 'USUARIO_SIMPLES']
        
        grupos_criados = []
        grupos_existentes = []
        
        # Criar cada grupo
        for nome_grupo in grupos:
            grupo, created = Group.objects.get_or_create(name=nome_grupo)
            
            if created:
                grupos_criados.append(nome_grupo)
                self.stdout.write(
                    self.style.SUCCESS(f'   ‚úì Grupo "{nome_grupo}" criado com sucesso!')
                )
            else:
                grupos_existentes.append(nome_grupo)
                self.stdout.write(
                    self.style.WARNING(f'   ‚Üí Grupo "{nome_grupo}" j√° existe')
                )
        
        # ==================================================
        # RESUMO FINAL
        # ==================================================
        self.stdout.write('\n' + '=' * 70)
        self.stdout.write(self.style.SUCCESS('‚úì PROCESSO CONCLU√çDO!'))
        self.stdout.write('=' * 70)
        
        self.stdout.write('\nüìä RESUMO:\n')
        
        if grupos_criados:
            self.stdout.write(f'   ‚úì Grupos criados: {", ".join(grupos_criados)}')
        
        if grupos_existentes:
            self.stdout.write(f'   ‚Üí Grupos j√° existentes: {", ".join(grupos_existentes)}')
        
        self.stdout.write(f'\n   üìå Total de grupos no sistema: {Group.objects.count()}')
        
        # Listar todos os grupos
        self.stdout.write('\nüìã GRUPOS CADASTRADOS NO SISTEMA:\n')
        
        self.stdout.write('‚îå' + '‚îÄ' * 68 + '‚îê')
        self.stdout.write(f'‚îÇ {"ID":<5} ‚îÇ {"NOME DO GRUPO":<58} ‚îÇ')
        self.stdout.write('‚îú' + '‚îÄ' * 68 + '‚î§')
        
        for grupo in Group.objects.all().order_by('name'):
            self.stdout.write(f'‚îÇ {grupo.id:<5} ‚îÇ {grupo.name:<58} ‚îÇ')
        
        self.stdout.write('‚îî' + '‚îÄ' * 68 + '‚îò')
        
        self.stdout.write('\nüí° PR√ìXIMOS PASSOS:\n')
        self.stdout.write('   1. Para atribuir um usu√°rio a um grupo:')
        self.stdout.write('      ‚Üí Acesse o Django Admin (http://localhost:8000/admin/)')
        self.stdout.write('      ‚Üí V√° em "Usu√°rios" > Selecione o usu√°rio')
        self.stdout.write('      ‚Üí Na se√ß√£o "Permiss√µes", adicione aos "Grupos"\n')
        
        self.stdout.write('   2. Ou crie usu√°rios de exemplo com grupos:')
        self.stdout.write('      ‚Üí Execute: python manage.py load_usuarios_exemplo\n')
        
        self.stdout.write('=' * 70 + '\n')